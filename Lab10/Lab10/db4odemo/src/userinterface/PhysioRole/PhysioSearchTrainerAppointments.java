/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PhysioRole;

import Business.BodyPartsInfo.WorkQueue.BodyPartsInfoWorkRequest;
import Business.Enterprise.Enterprise;
import Business.GymAppointment.WorkQueue.GymAddAppointmentWorkRequest;
import Business.Organization.PhysiotherapistOrganization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author varad
 */
public class PhysioSearchTrainerAppointments extends javax.swing.JPanel {

    /**
     * Creates new form PhysioCheckGymAppointments
     */
    private JPanel userProcessContainer;
    private PhysiotherapistOrganization physiotherapistOrganization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private BodyPartsInfoWorkRequest request;
    public PhysioSearchTrainerAppointments(JPanel userProcessContainer, UserAccount userAccount, BodyPartsInfoWorkRequest request, PhysiotherapistOrganization physiotherapistOrganization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.physiotherapistOrganization = physiotherapistOrganization;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.request=request;
        populateAppointmentTable();
    }

    public void populateAppointmentTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable1.getModel();
        
        model.setRowCount(0);
        for (GymAddAppointmentWorkRequest r : physiotherapistOrganization.getGymAddAppointmentWorkQueue().getGymAppointmentWorkRequestList()){
           Object[] row = new Object[5];
            row[0] = r;
            row[1] = r.getGymnasium();
            row[2] = r.getDate();
            row[3] = r.getTime(); 
            if(r.getStatusResult()==null)
            row[4] =r.getStatus();
            else
            row[4]= r.getStatusResult();
            model.addRow(row);
               
        }
    }
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        workRequestJTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        requestTestJButton1 = new javax.swing.JButton();
        enterpriseLabel1 = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 0, 0));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Appointment number", "Trainer Username", "date", "Time", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(workRequestJTable1);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 97, 519, 130));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 279, 81, 40));

        requestTestJButton1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        requestTestJButton1.setText("Continue");
        requestTestJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButton1ActionPerformed(evt);
            }
        });
        add(requestTestJButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(555, 279, 101, 40));

        enterpriseLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel1.setText("EnterPrise :");
        add(enterpriseLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 18, 110, 30));

        valueLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(199, 18, 170, 26));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void requestTestJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButton1ActionPerformed
        // TODO add your handling code here:

        try{
            GymAddAppointmentWorkRequest r=(GymAddAppointmentWorkRequest) workRequestJTable1.getValueAt(workRequestJTable1.getSelectedRow(), 0);
            String result = r.getStatusResult();
            if(result==null)
            {
                r.setBodyPartsInfoWorkRequest(request);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                userProcessContainer.add("PhysioBookTrainerAppointment", new PhysioBookTrainerAppointment(userProcessContainer, userAccount,physiotherapistOrganization,enterprise,r));
                layout.next(userProcessContainer);
            }
            else
            {
                
                JOptionPane.showMessageDialog(null, "Appointment is not booked yet");
            }
        }
        catch(ArrayIndexOutOfBoundsException e)
        {
            JOptionPane.showMessageDialog(null, "Please select a record!");
        }

    }//GEN-LAST:event_requestTestJButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel enterpriseLabel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton requestTestJButton1;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JTable workRequestJTable1;
    // End of variables declaration//GEN-END:variables
}
